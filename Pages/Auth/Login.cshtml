@page
@model Plantpedia.Pages.LoginModel
@{
    Layout = null;
    ViewData["Title"] = "Đăng nhập";
}
 
<!DOCTYPE html>
<html lang="vi">
 
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Plantpedia</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat:400,800" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/login_page.css" asp-append-version="true" />
</head>
 
<body>
    <div class="container" id="container">
 
        <!-- Đăng ký -->
        <div class="form-container sign-up-container">
            <form id="registerForm" asp-controller="Auth" asp-action="Register" method="post">
                @Html.AntiForgeryToken()
                <h1>Tạo tài khoản</h1>
 
                <!-- Vùng hiển thị lỗi động cho form đăng ký -->
                <div id="registerErrorsContainer" class="errors-container"></div>
 
                <input type="text" name="Name" placeholder="Họ và tên" required />
                <input type="email" name="Email" placeholder="Email" required />
                <input type="password" name="Password" placeholder="Mật khẩu" required />
                <button type="submit">Đăng ký</button>
            </form>
        </div>
 
        <!-- Đăng nhập -->
        <div class="form-container sign-in-container">
            <form id="loginForm" asp-controller="Auth" asp-action="Login" method="post">
                @Html.AntiForgeryToken()
                <h1>Đăng nhập</h1>
 
                <!-- Vùng hiển thị lỗi động cho form đăng nhập -->
                <div id="loginErrorsContainer" class="errors-container"></div>
 
                <input type="text" name="username" placeholder="Tên đăng nhập hoặc Email" autocomplete="username"
                    required />
                <input type="password" name="password" placeholder="Mật khẩu" autocomplete="current-password"
                    required />
                <a href="#" id="openForgot">Quên mật khẩu?</a>
                <button type="submit">Đăng nhập</button>
            </form>
        </div>
 
        <!-- Panel hiệu ứng chuyển -->
        <div class="overlay-container">
            <div class="overlay">
                <div class="overlay-panel overlay-left">
                    <h1>Chào mừng trở lại!</h1>
                    <p>Đăng nhập để khám phá Plantpedia.</p>
                    <button class="ghost" id="signIn" type="button">Đăng nhập</button>
                </div>
                <div class="overlay-panel overlay-right">
                    <h1>Xin chào, bạn mới!</h1>
                    <p>Nhập thông tin để bắt đầu cùng Plantpedia.</p>
                    <button class="ghost" id="signUp" type="button">Đăng ký</button>
                </div>
            </div>
        </div>
    </div>
 
    <!-- Forgot Password Modal -->
    <div class="modal fade" id="forgotModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
        <div class="modal-header">
            <h5 class="modal-title">Quên mật khẩu</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
        </div>
        <div class="modal-body">
            <div id="fpStepEmail">
            <div class="mb-3">
                <label class="form-label">Email đăng ký</label>
                <input type="email" id="fpEmail" class="form-control" placeholder="nhap@email.com" required>
            </div>
            <button class="btn btn-success w-100" id="btnSendCode">Gửi mã xác nhận</button>
            </div>

            <div id="fpStepCode" class="d-none">
            <div class="mb-3">
                <label class="form-label">Mã xác nhận (6 số)</label>
                <input type="text" id="fpCode" class="form-control" maxlength="6" inputmode="numeric" placeholder="______">
            </div>
            <div class="mb-3">
                <label class="form-label">Mật khẩu mới</label>
                <input type="password" id="fpNewPassword" class="form-control" placeholder="Mật khẩu mới">
            </div>
            <button class="btn btn-primary w-100" id="btnResetPassword">Đổi mật khẩu</button>
            <div class="mt-2 text-muted small">Chưa nhận được mã? <a href="#" id="btnResend">Gửi lại</a></div>
            </div>

            <div id="fpAlert" class="mt-3"></div>
        </div>
        </div>
    </div>
    </div>

    <script src="~/js/forgot-pass.js" asp-append-version="true"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
 
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const registerForm = document.getElementById('registerForm');
            const loginForm = document.getElementById('loginForm');
            const registerErrorsContainer = document.getElementById('registerErrorsContainer');
            const loginErrorsContainer = document.getElementById('loginErrorsContainer');
 
            // Hàm tái sử dụng để hiển thị lỗi
            function displayErrors(container, errors) {
                let errorHtml = '<div class="alert alert-danger text-start" role="alert"><ul class="mb-0">';
                errors.forEach(err => {
                    errorHtml += `<li>${err}</li>`;
                });
                errorHtml += '</ul></div>';
                container.innerHTML = errorHtml;
            }
 
            // Hàm tái sử dụng để xử lý việc gửi form
            async function handleFormSubmit(form, errorContainer) {
                // Ngăn chặn hành vi submit mặc định
                event.preventDefault();
 
                // Xóa các thông báo lỗi cũ
                errorContainer.innerHTML = '';
                const submitButton = form.querySelector('button[type="submit"]');
                const originalButtonText = submitButton.innerHTML;
                submitButton.innerHTML = 'Đang xử lý...';
                submitButton.disabled = true;
 
                try {
                    const formData = new FormData(form);
                    const response = await fetch(form.action, {
                        method: 'POST',
                        body: formData,
                    });
 
                    if (response.ok) {
                        const result = await response.json();
                        window.location.href = result.redirectUrl;
                    } else {
                        const errorResult = await response.json();
                        if (errorResult && errorResult.errors) {
                            displayErrors(errorContainer, errorResult.errors);
                        } else {
                            displayErrors(errorContainer, ['Có lỗi không xác định xảy ra.']);
                        }
                    }
                } catch (error) {
                    console.error('Fetch error:', error);
                    displayErrors(errorContainer, ['Không thể kết nối đến máy chủ.']);
                } finally {
                    // Khôi phục lại trạng thái nút bấm
                    submitButton.innerHTML = originalButtonText;
                    submitButton.disabled = false;
                }
            }
 
            // Gán sự kiện cho form đăng ký
            if (registerForm) {
                registerForm.addEventListener('submit', (event) => handleFormSubmit(registerForm, registerErrorsContainer));
            }
 
            // Gán sự kiện cho form đăng nhập
            if (loginForm) {
                loginForm.addEventListener('submit', (event) => handleFormSubmit(loginForm, loginErrorsContainer));
            }
 
            // --- Script cũ để chuyển đổi panel ---
            const signUpButton = document.getElementById('signUp');
            const signInButton = document.getElementById('signIn');
            const container = document.getElementById('container');
 
            const urlParams = new URLSearchParams(window.location.search);
            if (urlParams.get('showRegister') === 'true') {
                container.classList.add("right-panel-active");
            }
 
            signUpButton.addEventListener('click', () => {
                container.classList.add("right-panel-active");
            });
 
            signInButton.addEventListener('click', () => {
                container.classList.remove("right-panel-active");
            });
        });
    </script>
</body>
</html>